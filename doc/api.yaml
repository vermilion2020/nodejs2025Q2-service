openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
      summary: Get home page
      tags:
        - App
  /user:
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      summary: Create user
      tags:
        - Users
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      summary: Get all users
      tags:
        - Users
  /user/{id}:
    get:
      operationId: UserController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Get user by id
      tags:
        - Users
    put:
      operationId: UserController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      summary: Change user password by id
      tags:
        - Users
    delete:
      operationId: UserController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      summary: Delete user by id
      tags:
        - Users
  /artist:
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
      summary: Create artist
      tags:
        - Artists
    get:
      operationId: ArtistController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      summary: Get all artists
      tags:
        - Artists
  /artist/{id}:
    get:
      operationId: ArtistController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Get artist by id
      tags:
        - Artists
    put:
      operationId: ArtistController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
      summary: Update artist by id
      tags:
        - Artists
    delete:
      operationId: ArtistController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      summary: Delete artist by id
      tags:
        - Artists
  /favs:
    get:
      operationId: FavsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      summary: Get all favorites
      tags:
        - Favorites
  /favs/track/{id}:
    post:
      operationId: FavsController_createTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      summary: Create track in favorites
      tags:
        - Favorites
    delete:
      operationId: FavsController_removeTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      summary: Remove track from favorites
      tags:
        - Favorites
  /favs/album/{id}:
    post:
      operationId: FavsController_createAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      summary: Create album in favorites
      tags:
        - Favorites
    delete:
      operationId: FavsController_removeAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      summary: Remove album from favorites
      tags:
        - Favorites
  /favs/artist/{id}:
    post:
      operationId: FavsController_createArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      summary: Create artist in favorites
      tags:
        - Favorites
    delete:
      operationId: FavsController_removeArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      summary: Remove artist from favorites
      tags:
        - Favorites
  /album:
    post:
      operationId: AlbumController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
      summary: Create album
      tags:
        - Albums
    get:
      operationId: AlbumController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      summary: Get all albums
      tags:
        - Albums
  /album/{id}:
    get:
      operationId: AlbumController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Get album by id
      tags:
        - Albums
    put:
      operationId: AlbumController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
      summary: Update album by id
      tags:
        - Albums
    delete:
      operationId: AlbumController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      summary: Delete album by id
      tags:
        - Albums
  /track:
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
      summary: Create track
      tags:
        - Tracks
    get:
      operationId: TrackController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      summary: Get all tracks
      tags:
        - Tracks
  /track/{id}:
    get:
      operationId: TrackController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      summary: Get track by id
      tags:
        - Tracks
    put:
      operationId: TrackController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: ''
      summary: Update track by id
      tags:
        - Tracks
    delete:
      operationId: TrackController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      summary: Delete track by id
      tags:
        - Tracks
info:
  title: Home Library Service
  description: Home Library Service description
  version: '1.0'
  contact: {}
tags:
  - name: home-library
    description: ''
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties: {}
    UpdateUserDto:
      type: object
      properties: {}
    CreateArtistDto:
      type: object
      properties: {}
    UpdateArtistDto:
      type: object
      properties: {}
    CreateAlbumDto:
      type: object
      properties: {}
    UpdateAlbumDto:
      type: object
      properties: {}
    CreateTrackDto:
      type: object
      properties: {}
    UpdateTrackDto:
      type: object
      properties: {}
